//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Invstack.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StackEntities : DbContext
    {
        public StackEntities()
            : base("name=StackEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Articles> tbl_Articles { get; set; }
        public virtual DbSet<tbl_Comments> tbl_Comments { get; set; }
        public virtual DbSet<tbl_Questions> tbl_Questions { get; set; }
        public virtual DbSet<tbl_UserDetails> tbl_UserDetails { get; set; }
    
        public virtual int Add_question(Nullable<int> user_id, string emp_id, string title, string question, string question_Description, string language, Nullable<int> entry_By)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(int));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("Emp_id", emp_id) :
                new ObjectParameter("Emp_id", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var question_DescriptionParameter = question_Description != null ?
                new ObjectParameter("Question_Description", question_Description) :
                new ObjectParameter("Question_Description", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(string));
    
            var entry_ByParameter = entry_By.HasValue ?
                new ObjectParameter("Entry_By", entry_By) :
                new ObjectParameter("Entry_By", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_question", user_idParameter, emp_idParameter, titleParameter, questionParameter, question_DescriptionParameter, languageParameter, entry_ByParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string employee_Id, string password)
        {
            var employee_IdParameter = employee_Id != null ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", employee_IdParameter, passwordParameter);
        }
    }
}
